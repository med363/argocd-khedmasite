---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: example-deploy
  labels:
    app: example-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: example-app
    spec:
      imagePullSecrets:
      - name: dockerhub-secret # Make sure this secret exists and is correct
      containers:
      - name: example-app
        image: mohamedamineblibech/frontend:v1.176
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "http://backend-service:80" # Proxy to backend service
        - name: REACT_APP_PUBLIC_FOLDER
          value: "http://backend-service:80/media/images/"
        - name: REACT_APP_PROXY
          value: "http://backend-service:80" # Add a custom proxy field for your app
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "3000"
        - name: DANGEROUSLY_DISABLE_HOST_CHECK
          value: "true"
        command:
        - sh
        - -C
        - DEBUG=False
        # resources:
        #   requests:
        #     memory: "500Mi"
        #     cpu: "500m"
        #   limits:
        #     memory: "800Mi"
        #     cpu: "500m"
        # Uncomment volumeMounts if you are using secrets or configMaps
        # volumeMounts:
        # - name: secret-volume
        #   mountPath: /secrets/
        # - name: config-volume
        #   mountPath: /configs/
      # Uncomment volumes if you are using secrets or configMaps
      # volumes:
      # - name: secret-volume
      #   secret:
      #     secretName: mysecret
      # - name: config-volume
      #   configMap:
      #     name: example-config

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: example-service
  labels:
    app: example-app
spec:
  type: LoadBalancer
  selector:
    app: example-app
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 3000
